{
    "beneficiary":
    {
        "address":null,
        "bank_account_holder_name":null,
        "city":null,
        "code":null,
        "country_iso_code":null,
        "country_of_birth_iso_code":null,
        "date_of_birth":null,
        "email":null,
        "firstname":"Arnold",
        "gender":null,
        "id_country_iso_code":null,
        "id_delivery_date":null,
        "id_expiration_date":null,
        "id_number":null,
        "id_type":null,
        "lastname":"Tan",
        "lastname2":null,
        "middlename":null,
        "msisdn":null,
        "nationality_country_iso_code":null,
        "nativename":null,
        "occupation":null,
        "postal_code":null,
        "province_state":null
    },
    "destination":
    {
        "amount":300,
        "currency":"PHP"
    },
    "purpose_of_remittance":null,
    "sender":
    {
        "address":null,
        "beneficiary_relationship":null,
        "city":null,
        "code":null,
        "country_iso_code":"SGP",
        "country_of_birth_iso_code":"FRA",
        "date_of_birth":null,
        "email":null,
        "firstname":"Elie",
        "gender":null,
        "id_country_iso_code":null,
        "id_delivery_date":null,
        "id_expiration_date":null,
        "id_number":null,
        "id_type":null,
        "lastname":"Bertha",
        "lastname2":null,
        "middlename":null,
        "msisdn":null,
        "nationality_country_iso_code":"FRA",
        "nativename":null,
        "occupation":null,
        "postal_code":null,
        "province_state":null,
        "source_of_funds":null
    },
    "transaction_code":"TT-PHL-00-000-743-332"
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

/// <summary>
/// Summary description for CreateTransactionModel
/// </summary>
public class collections
{
		
	public String id   { get; set; }
	public String external_id    { get; set; }
	public String status     { get; set; }
	public String status_message     { get; set; }
	public String status_class   { get; set; }
	public String status_class_message   { get; set; }
	public String creation_date  { get; set; }
	public branch branch     { get; set; }
    public transaction transaction { get; set; }
}

public class branch
{
    public String code  { get; set; }
	public String name  { get; set; }
	public String address  { get; set; }
	public String postal_code  { get; set; }
	public String city  { get; set; }
	public String country_iso_code  { get; set; }
}

public class transaction
{
    public sender sender  { get; set; }
    public beneficiary beneficiary  { get; set; }
    public destination destination  { get; set; }    		        	
    public String purpose_of_remittance  { get; set; }
    public String transaction_code  { get; set; }
}

public class destination
{
    public int amount  { get; set; }
	public String currency  { get; set; }
}

public class sender
{
    public String address  { get; set; }
    public String beneficiary_relationship  { get; set; }
    public String city  { get; set; }
    public String code  { get; set; }
    public String country_iso_code { get; set; }
    public String country_of_birth_iso_code { get; set; }
    public String date_of_birth  { get; set; }
    public String email  { get; set; }
    public String firstname { get; set; }
    public String gender  { get; set; }
    public String id_country_iso_code  { get; set; }
    public String id_delivery_date  { get; set; }
    public String id_expiration_date  { get; set; }
    public String id_number  { get; set; }
    public String id_type  { get; set; }
    public String lastname { get; set; }
    public String lastname2  { get; set; }
    public String middlename  { get; set; }
    public String msisdn  { get; set; }
    public String nationality_country_iso_code { get; set; }
    public String nativename  { get; set; }
    public String occupation  { get; set; }
    public String postal_code  { get; set; }
    public String province_state  { get; set; }
    public String source_of_funds { get; set; }
}

public class beneficiary
{
    public String address  { get; set; }
    public String bank_account_holder_name  { get; set; }
    public String city  { get; set; }
    public String code  { get; set; }
    public String country_iso_code  { get; set; }
    public String country_of_birth_iso_code  { get; set; }
    public String date_of_birth  { get; set; }
    public String  email  { get; set; }
    public String firstname { get; set; }
    public String gender  { get; set; }
    public String id_country_iso_code  { get; set; }
    public String id_delivery_date  { get; set; }
    public String id_expiration_date  { get; set; }
    public String id_number  { get; set; }
    public String id_type  { get; set; }
    public String lastname { get; set; }
    public String lastname2  { get; set; }
    public String middlename  { get; set; }
    public String msisdn  { get; set; }
    public String nationality_country_iso_code  { get; set; }
    public String nativename  { get; set; }
    public String occupation  { get; set; }
    public String postal_code  { get; set; }
    public String province_state { get; set; }
}    	



 String requestURL = url + "/v1/cash-pickup/transactions/code-" + refno;
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(requestURL);
            request.Method = "POST";
            request.Headers["Authorization"] = "Basic " + Convert.ToBase64String(Encoding.Default.GetBytes(username + ":" + password));
            request.ContentType = "application/json;charset=UTF-8";
            request.PreAuthenticate = true;

            kplog.Info("TransferTo ShowremittanceDetails Request : [" + refno + "] - " + request.RequestUri);

            HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            Stream datastream = response.GetResponseStream();
            StreamReader reader = new StreamReader(datastream);
            String resp = reader.ReadToEnd();
          
            var jsonresp = Newtonsoft.Json.JsonConvert.DeserializeObject<TransactionModel>(resp);












#region
            kplog.Fatal(refno + " - " + ex.ToString());
            using (var stream = ex.Response.GetResponseStream())
            {
                using (var reader = new StreamReader(stream))
                {
                    var statuscode = ((HttpWebResponse)ex.Response).StatusCode;
                    var statusmsg = ((HttpWebResponse)ex.Response).StatusDescription;
                    if (ex.Status == WebExceptionStatus.ProtocolError)
                    {
                        kplog.Fatal("refno: " + refno + " | Status Code : " + statuscode + " | Status Description : " + statusmsg + " | Server :" + ((HttpWebResponse)ex.Response).Server);
                    }
                    trans.respcode = statusCode;
                    trans.respmsg = statusmsg;
                    trans.transdate = Convert.ToString(getserverdatePartners());
                    kplog.Fatal(refno + " - " + ex.ToString());
                }
            }
            #endregion